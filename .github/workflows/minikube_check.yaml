name: Minikube check pods

#on:
#  release:
#    types: [published]

on:
  push:
    branches: [ "main" ]

jobs:
  setup_minikube:
    name: test minikube setup
    runs-on: ubuntu-latest
    outputs:
      crashed_pods_count: ${{ steps.check_crashed_pods.outputs.crashed_pods_count }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Minikube
        uses: medyagh/setup-minikube@latest
        id: minikube

      - name: Minikube status
        run: |
          minikube status

      - name: Build image
        run: |
          minikube image build -t andybar69/githubaction:v1 .

      - name: Deploy to minikube
        run: |
          kubectl apply -f test_pod.yaml

      #- name: Waiting for pod
      #  run: kubectl wait --for=condition=ready pod -l app=ubuntu --timeout=300s

  #check_minikube:
  #  name: Check minikube
  #  runs-on: ubuntu-latest
  #  steps:
      - name: List pods
        run: kubectl get pods -A

      - name: Service list
        run: |
          minikube service list

      - name: Check crashed pods
        id: check_crashed_pods
        run: |
          crashed_pods_count=$(kubectl get pods -A | awk 'NR!=1 {print $4}' | grep -v 'Running' | wc -l) >> "$GITHUB_OUTPUT"
          crashed_pods_list=$(kubectl get pods -A | awk 'NR!=1 && $4 != "Running" {print $1"/"$2}')
          echo "Crashed pods: $crashed_pods_count"
          echo "Crashed pods list: $crashed_pods_list"

      - name: Slack Notify
        run: |
          echo ${{ steps.check_crashed_pods.outputs.crashed_pods_count }}
          echo "$steps.check_crashed_pods.outputs.crashed_pods_count"
          echo "$GITHUB_OUTPUT"
        #if: steps.check_crashed_pods.outputs.crashed_pods_count > 0
        #uses: rtCamp/action-slack-notify@v2
        #env:
        #  SLACK_CHANNEL: test-notification
        #  SLACK_COLOR: 'red'
        #  SLACK_ICON: https://github.com/rtCamp.png?size=48
        #  SLACK_MESSAGE: Some of pods have crashed
        #  SLACK_TITLE: Pods issue
        #  SLACK_USERNAME: test
        #  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL}}
